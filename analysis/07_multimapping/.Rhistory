intersect(highcor$SRR13401118$transcript_id) %>%
intersect(highcor$SRR13401119$transcript_id) %>%
intersect(highcor$SRR13401120$transcript_id) %>%
intersect(highcor$SRR13401121$transcript_id) %>%
intersect(highcor$SRR13401122$transcript_id) %>%
intersect(highcor$SRR13401123$transcript_id)
lowcor_in_all <- intersect(lowcor$SRR13401116$transcript_id,
lowcor$SRR13401117$transcript_id) %>%
intersect(lowcor$SRR13401118$transcript_id) %>%
intersect(lowcor$SRR13401119$transcript_id) %>%
intersect(lowcor$SRR13401120$transcript_id) %>%
intersect(lowcor$SRR13401121$transcript_id) %>%
intersect(lowcor$SRR13401122$transcript_id) %>%
intersect(lowcor$SRR13401123$transcript_id)
# Get most lowcor on average
for(i in names(lowcor)) {
lowcor[[i]] <- dplyr::filter(
lowcor[[i]], transcript_id %in% lowcor_in_all
)
}
sd_df <- data.frame()
for(i in lowcor_in_all) {
new_sd_row <- data.frame("transcript_id" = i)
for(j in names(lowcor)) {
new_nm <- paste0(j, "_stdev")
new_row_df <- dplyr::filter(lowcor[[j]], transcript_id == i) %>%
dplyr::select("transcript_id",
"stdev")
colnames(new_row_df)[colnames(new_row_df) == "stdev"] <- new_nm
new_sd_row <- cbind(new_sd_row, new_row_df)
new_sd_row <- new_sd_row[, !duplicated(colnames(new_sd_row))]
}
sd_df <- rbind(sd_df, new_sd_row)
}
sd_df <- column_to_rownames(sd_df, "transcript_id")
mean_sd_df <- apply(sd_df, 1, mean) %>%
as.data.frame() %>%
set_colnames("mean_sd") %>%
rownames_to_column("transcript_id")
# sanity check
left_join(rownames_to_column(sd_df, "transcript_id"),
mean_sd_df,
by = "transcript_id")
# Now take the top
lowcor <- mean_sd_df %>%
dplyr::arrange(desc(mean_sd)) %>%
head(100)
# Get most highcor on average
for(i in names(highcor)) {
highcor[[i]] <- dplyr::filter(
highcor[[i]], transcript_id %in% highcor_in_all
)
}
sd_df <- data.frame()
for(i in highcor_in_all) {
new_sd_row <- data.frame("transcript_id" = i)
for(j in names(highcor)) {
new_nm <- paste0(j, "_stdev")
new_row_df <- dplyr::filter(highcor[[j]], transcript_id == i) %>%
dplyr::select("transcript_id",
"stdev")
colnames(new_row_df)[colnames(new_row_df) == "stdev"] <- new_nm
new_sd_row <- cbind(new_sd_row, new_row_df)
new_sd_row <- new_sd_row[, !duplicated(colnames(new_sd_row))]
}
sd_df <- rbind(sd_df, new_sd_row)
}
sd_df <- column_to_rownames(sd_df, "transcript_id")
mean_sd_df <- apply(sd_df, 1, mean) %>%
as.data.frame() %>%
set_colnames("mean_sd") %>%
rownames_to_column("transcript_id")
# sanity check
left_join(rownames_to_column(sd_df, "transcript_id"),
mean_sd_df,
by = "transcript_id")
# Now take the top
highcor <- mean_sd_df %>%
dplyr::arrange(desc(mean_sd)) %>%
head(100)
hisat2_unique %>% left_join(dplyr::select(txp_gene_ensdb_lengths, "transcript_id" = "tx_id", "transcript_name" = "tx_name", "transcript_biotype" = "tx_biotype", "gene_id", "transcript_length", "gc_content"), by = "transcript_id")
highcor
set_info <- function(x) {
x %>%
left_join(
dplyr::select(txp_gene_ensdb_lengths,
"transcript_id" = "tx_id",
"transcript_name" = "tx_name",
"transcript_biotype" = "tx_biotype",
"gene_id", "transcript_length",
"gc_content"),
by = "transcript_id")
}
set_info(hisat2_unique)
set_info(hisat2_unique)
set_info(kallisto_unique)
set_info(salmon_unique)
set_info(star_unique)
set_info(lowcor)
set_info(lowcor)[["transcrpt_biotype"]]
set_info(lowcor)[, "transcrpt_biotype"]
set_info(lowcor)["transcrpt_biotype"]
set_info(lowcor)["transcript_biotype"]
set_info(lowcor)["transcript_biotype"] %>% table()
set_info(highcor) %>% dplyr::mutate(group = "Concordant")
set_info(lowcor) %>% dplyr::mutate(group = "Discordant")
set_info(hisat2_unique) %>% dplyr::mutate(group = "HISAT2")
set_info(kallisto_unique) %>% dplyr::mutate(group = "Kallisto")
set_info(salmon_unique) %>% dplyr::mutate(group = "Salmon")
set_info(star_unique) %>% dplyr::mutate(group = "STAR")
rbind(
set_info(highcor) %>% dplyr::mutate(group = "Concordant"),
set_info(lowcor) %>% dplyr::mutate(group = "Discordant"),
set_info(hisat2_unique) %>% dplyr::mutate(group = "HISAT2"),
set_info(kallisto_unique) %>% dplyr::mutate(group = "Kallisto"),
set_info(salmon_unique) %>% dplyr::mutate(group = "Salmon"),
set_info(star_unique) %>% dplyr::mutate(group = "STAR")
)
set_info(highcor) %>% dplyr::mutate(group = "Concordant")
rbind(
set_info(highcor) %>% dplyr::mutate(group = "Concordant") %>%
dplyr::select(-"mean_sd"),
set_info(lowcor) %>% dplyr::mutate(group = "Discordant") %>%
dplyr::select(-"mean_sd"),
set_info(hisat2_unique) %>% dplyr::mutate(group = "HISAT2") %>%
dplyr::select(-"mean_sd"),
set_info(kallisto_unique) %>% dplyr::mutate(group = "Kallisto") %>%
dplyr::select(-"mean_sd"),
set_info(salmon_unique) %>% dplyr::mutate(group = "Salmon") %>%
dplyr::select(-"mean_sd"),
set_info(star_unique) %>% dplyr::mutate(group = "STAR") %>%
dplyr::select(-"mean_sd")
)
set_info(hisat2_unique) %>% dplyr::mutate(group = "HISAT2")
rbind(
set_info(highcor) %>% dplyr::mutate(group = "Concordant") %>%
dplyr::select(-"mean_sd"),
set_info(lowcor) %>% dplyr::mutate(group = "Discordant") %>%
dplyr::select(-"mean_sd"),
set_info(hisat2_unique) %>% dplyr::mutate(group = "HISAT2") %>%
dplyr::select(-"hisat2_tx_dev"),
set_info(kallisto_unique) %>% dplyr::mutate(group = "Kallisto") %>%
dplyr::select(-"kallisto_tx_dev"),
set_info(salmon_unique) %>% dplyr::mutate(group = "Salmon") %>%
dplyr::select(-"salmon_tx_dev"),
set_info(star_unique) %>% dplyr::mutate(group = "STAR") %>%
dplyr::select(-"star_tx_dev")
)
sets_plot <- rbind(
set_info(highcor) %>% dplyr::mutate(group = "Concordant") %>%
dplyr::select(-"mean_sd"),
set_info(lowcor) %>% dplyr::mutate(group = "Discordant") %>%
dplyr::select(-"mean_sd"),
set_info(hisat2_unique) %>% dplyr::mutate(group = "HISAT2") %>%
dplyr::select(-"hisat2_tx_dev"),
set_info(kallisto_unique) %>% dplyr::mutate(group = "Kallisto") %>%
dplyr::select(-"kallisto_tx_dev"),
set_info(salmon_unique) %>% dplyr::mutate(group = "Salmon") %>%
dplyr::select(-"salmon_tx_dev"),
set_info(star_unique) %>% dplyr::mutate(group = "STAR") %>%
dplyr::select(-"star_tx_dev")
)
colnames(sets_plot)
sets_plot %>%
ggplot(aes(x = group, y = gc_content)) +
geom_boxplot()
sets_plot %>%
ggplot(aes(x = group, y = gc_content)) +
geom_boxplot(colour = "black", fill = "lightblue")
sets_plot %>%
ggplot(aes(x = group, y = gc_content)) +
geom_boxplot(colour = "black", fill = "lightblue") +
theme_bw()
set_info <- function(x) {
x %>%
left_join(
dplyr::select(txp_gene_ensdb_lengths,
"transcript_id" = "tx_id",
"transcript_name" = "tx_name",
"transcript_biotype" = "tx_biotype",
"gene_id", "transcript_length",
"gc_content"),
by = "transcript_id")
}
sets_plot <- rbind(
set_info(highcor) %>% dplyr::mutate(group = "Concordant") %>%
dplyr::select(-"mean_sd"),
set_info(lowcor) %>% dplyr::mutate(group = "Discordant") %>%
dplyr::select(-"mean_sd"),
set_info(hisat2_unique) %>% dplyr::mutate(group = "HISAT2") %>%
dplyr::select(-"hisat2_tx_dev"),
set_info(kallisto_unique) %>% dplyr::mutate(group = "Kallisto") %>%
dplyr::select(-"kallisto_tx_dev"),
set_info(salmon_unique) %>% dplyr::mutate(group = "Salmon") %>%
dplyr::select(-"salmon_tx_dev"),
set_info(star_unique) %>% dplyr::mutate(group = "STAR") %>%
dplyr::select(-"star_tx_dev")
)
sets_plot %>%
ggplot(aes(x = group, y = gc_content)) +
geom_boxplot(colour = "black", fill = "lightblue") +
labs(x = "Group", y = "GC Content") +
theme_bw() +
theme(axis.text = element_text(colour = "black", size = 12),
axis.title = element_text(colour = "black", size = 14))
sets_plot
sets_plot %>%
ggplot(aes(x = group, y = transcript_length)) +
geom_boxplot(colour = "black", fill = "lightblue") +
labs(x = "Group", y = "GC Content") +
theme_bw() +
theme(axis.text = element_text(colour = "black", size = 12),
axis.title = element_text(colour = "black", size = 14))
sets_plot %>%
ggplot(aes(x = group, y = log2(transcript_length))) +
geom_boxplot(colour = "black", fill = "lightblue") +
labs(x = "Group", y = "GC Content") +
theme_bw() +
theme(axis.text = element_text(colour = "black", size = 12),
axis.title = element_text(colour = "black", size = 14))
sets_plot
sets_plot %>% colnames()
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n())
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
ggplot(aes(x = transcript_biotype, y = tx_biotype_n)) +
geom_col() +
facet_wrap(~ group)
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
ggplot(aes(x = transcript_biotype, y = tx_biotype_n, fill = transcript_biotype)) +
geom_col() +
facet_wrap(~ group) +
theme_bw()
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
ggplot(aes(x = transcript_biotype, y = tx_biotype_n, fill = transcript_biotype)) +
geom_col() +
scale_fill_viridis_d() +
facet_wrap(~ group) +
theme_bw()
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
ggplot(aes(x = transcript_biotype, y = tx_biotype_n, fill = transcript_biotype)) +
geom_bar() +
scale_fill_viridis_d() +
facet_wrap(~ group) +
theme_bw()
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
ggplot(aes(y = transcript_biotype, fill = transcript_biotype)) +
geom_bar() +
scale_fill_viridis_d() +
facet_wrap(~ group) +
theme_bw()
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
ggplot(aes(y = transcript_biotype, x = tx_biotype_n, fill = transcript_biotype)) +
geom_bar() +
scale_fill_viridis_d() +
facet_wrap(~ group) +
theme_bw()
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
ggplot(aes(y = transcript_biotype, x = tx_biotype_n, fill = transcript_biotype)) +
geom_col() +
scale_fill_viridis_d() +
facet_wrap(~ group) +
theme_bw()
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
dplyr::arrance(tx_biotype_n) %>%
ggplot(aes(y = transcript_biotype, x = tx_biotype_n, fill = transcript_biotype)) +
geom_col() +
scale_fill_viridis_d() +
facet_wrap(~ group) +
theme_bw()
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
dplyr::arrange(tx_biotype_n) %>%
ggplot(aes(y = transcript_biotype, x = tx_biotype_n, fill = transcript_biotype)) +
geom_col() +
scale_fill_viridis_d() +
facet_wrap(~ group) +
theme_bw()
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
dplyr::arrange(tx_biotype_n)
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
dplyr::arrange(desc(tx_biotype_n)) %>%
ggplot(aes(y = transcript_biotype, x = tx_biotype_n, fill = transcript_biotype)) +
geom_col() +
scale_fill_viridis_d() +
facet_wrap(~ group) +
theme_bw()
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
dplyr::arrange(desc(tx_biotype_n))
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
dplyr::arrange(desc(tx_biotype_n)) %>% dplyr::select("transcript_biotype") %>% unique()
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
dplyr::arrange(desc(tx_biotype_n)) %>% dplyr::select("transcript_biotype")
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
dplyr::arrange(desc(tx_biotype_n)) %>%
ggplot(aes(y = transcript_biotype, x = tx_biotype_n)) +
geom_col(fill = "lightblue") +
scale_fill_viridis_d() +
facet_wrap(~ group) +
theme_bw()
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
dplyr::arrange(desc(tx_biotype_n)) %>%
ggplot(aes(y = transcript_biotype, x = tx_biotype_n)) +
geom_col(colour = "blue", fill = "lightblue") +
scale_fill_viridis_d() +
facet_wrap(~ group) +
theme_bw()
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
dplyr::arrange(desc(tx_biotype_n)) %>%
ggplot(aes(y = transcript_biotype, x = tx_biotype_n)) +
geom_col(colour = "blue", fill = "lightblue") +
scale_fill_viridis_d() +
facet_wrap(~ group) +
labs(x = "Frequency (n)", y = "Transcript Biotype") +
theme_bw() +
theme(axis.title = element_text(colour = "black", size = 14),
axis.text = element_text(colour = "black", size = 12))
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
dplyr::arrange(desc(tx_biotype_n)) %>%
ggplot(aes(y = str_to_title(str_replace(transcript_biotype, "_", " ")),
x = tx_biotype_n)) +
geom_col(colour = "blue", fill = "lightblue") +
scale_fill_viridis_d() +
facet_wrap(~ group) +
labs(x = "Frequency (n)", y = "Transcript Biotype") +
theme_bw() +
theme(axis.title = element_text(colour = "black", size = 14),
axis.text = element_text(colour = "black", size = 12))
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
dplyr::arrange(desc(tx_biotype_n)) %>%
ggplot(aes(y = str_to_title(str_replace_all(transcript_biotype, "_", " ")),
x = tx_biotype_n)) +
geom_col(colour = "blue", fill = "lightblue") +
scale_fill_viridis_d() +
facet_wrap(~ group) +
labs(x = "Frequency (n)", y = "Transcript Biotype") +
theme_bw() +
theme(axis.title = element_text(colour = "black", size = 14),
axis.text = element_text(colour = "black", size = 12))
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
dplyr::arrange(desc(tx_biotype_n)) %>%
ggplot(aes(y = str_to_title(str_replace_all(transcript_biotype, "_", " ")),
x = tx_biotype_n)) +
geom_col(colour = "blue", fill = "lightblue") +
scale_fill_viridis_d() +
facet_wrap(~ group) +
labs(x = "Frequency (n)", y = "Transcript Biotype") +
theme_bw() +
theme(axis.title = element_text(colour = "black", size = 14),
axis.text = element_text(colour = "black", size = 12),
strip.background = element_rect(fill = "lightblue"))
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
dplyr::arrange(desc(tx_biotype_n)) %>%
ggplot(aes(y = str_to_title(str_replace_all(transcript_biotype, "_", " ")),
x = tx_biotype_n)) +
geom_col(colour = "blue", fill = "lightblue") +
scale_fill_viridis_d() +
facet_wrap(~ group) +
labs(x = "Frequency (n)", y = "Transcript Biotype") +
theme_bw() +
theme(axis.title = element_text(colour = "black", size = 14),
axis.text = element_text(colour = "black", size = 12),
strip.background = element_rect(fill = "lightblue"),
strip.text = element_text(colour = "black", size = 12))
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
dplyr::arrange(desc(tx_biotype_n)) %>%
ggplot(aes(y = str_replace_all(transcript_biotype, "_", " "),
x = tx_biotype_n)) +
geom_col(colour = "blue", fill = "lightblue") +
scale_fill_viridis_d() +
facet_wrap(~ group) +
labs(x = "Frequency (n)", y = "Transcript Biotype") +
theme_bw() +
theme(axis.title = element_text(colour = "black", size = 14),
axis.text = element_text(colour = "black", size = 12),
strip.background = element_rect(fill = "lightblue"),
strip.text = element_text(colour = "black", size = 12))
sets_plot %>%
ggplot(aes(x = group, y = log2(transcript_length))) +
geom_boxplot(colour = "black", fill = "lightblue") +
labs(x = "Group", y = "GC Content") +
theme_bw() +
theme(axis.text = element_text(colour = "black", size = 12),
axis.title = element_text(colour = "black", size = 14))
sets_plot %>%
ggplot(aes(x = group, y = gc_content)) +
geom_boxplot(colour = "black", fill = "lightblue") +
labs(x = "Group", y = "GC Content") +
theme_bw() +
theme(axis.text = element_text(colour = "black", size = 12),
axis.title = element_text(colour = "black", size = 14))
sets_plot %>%
ggplot(aes(x = group, y = log2(transcript_length))) +
geom_boxplot(colour = "black", fill = "lightblue") +
labs(x = "Group", y = "Transcript length (bp)") +
theme_bw() +
theme(axis.text = element_text(colour = "black", size = 12),
axis.title = element_text(colour = "black", size = 14))
sets_plot %>%
ggplot(aes(x = group, y = gc_content)) +
geom_boxplot(colour = "black", fill = "lightblue") +
labs(x = "Group", y = "GC Content") +
theme_bw() +
theme(axis.text = element_text(colour = "black", size = 12),
axis.title = element_text(colour = "black", size = 14))
set_info
sets_plot
sets_plot$gc_content %>% summary()
sets_plot
sets_plot %>% head()
sets_plot %>%
group_by(group) %>%
summarise(min = min(gc_content),
Q1 = quantile(gc_content, 0.25),
median = median(gc_content),
mean = mean(gc_content),
Q3 = quantile(gc_content, 0.75),
max = max(gc_content))
sets_plot %>%
group_by(group) %>%
summarise(min = min(gc_content),
Q1 = quantile(gc_content, 0.25),
median = median(gc_content),
mean = mean(gc_content),
Q3 = quantile(gc_content, 0.75),
max = max(gc_content))
sets_plot %>%
group_by(group) %>%
summarise(min = min(transcript_length),
Q1 = quantile(transcript_length, 0.25),
median = median(transcript_length),
mean = mean(transcript_length),
Q3 = quantile(transcript_length, 0.75),
max = max(transcript_length))
sets_plot %>%
group_by(group) %>%
summarise(min = min(gc_content),
Q1 = quantile(gc_content, 0.25),
median = median(gc_content),
mean = mean(gc_content),
Q3 = quantile(gc_content, 0.75),
max = max(gc_content)) %>%
write_csv(here("data/groups_gc_content.csv"))
sets_plot %>%
group_by(group) %>%
summarise(min = min(transcript_length),
Q1 = quantile(transcript_length, 0.25),
median = median(transcript_length),
mean = mean(transcript_length),
Q3 = quantile(transcript_length, 0.75),
max = max(transcript_length)) %>%
write_csv(here("data/groups_tx_length.csv"))
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
dplyr::arrange(desc(tx_biotype_n))
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n())
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
dplyr::arrange(group)
sets_plot %>%
group_by(group, transcript_biotype) %>%
summarise(tx_biotype_n = n()) %>%
dplyr::arrange(group) %>%
write_csv(here("data/groups_tx_biotype_n.csv"))
