"Concordant",
"Discordant")
))
suppressWarnings(cor_legend <- cowplot::get_legend(
cor_to_plot %>%
dplyr::filter(!colour_txps == "midcor") %>%
ggplot() +
geom_point(
aes(x = .data[[cohort_x]],
y = .data[[cohort_y]],
colour = .data[["colour_txps"]]),
alpha = 1,
size = 8
) +
scale_colour_manual(
values = c("green", "red", "black")
) +
guides(colour = guide_legend(bycol = TRUE)) +
labs(colour = "Transcript Counts\nVariance") +
theme_bw() +
theme(legend.title = element_blank(),
legend.text = element_text(size = 20, colour = "black"),
legend.spacing.x = unit(1, "cm"),
legend.position = "bottom")
))
cor_colours <- cor_to_plot %>%
dplyr::filter(colour_txps %in% c("Concordant", "Discordant"))
col_scale <- c("green", "red")
cor_to_plot %>%
ggplot() +
geom_point(
aes(x = .data[[cohort_x]],
y = .data[[cohort_y]]),
colour = "black",
alpha = 1
) +
geom_point(data = cor_colours,
aes(
x = .data[[cohort_x]],
y = .data[[cohort_y]],
colour = .data[["colour_txps"]])
) +
scale_colour_manual(values = col_scale) +
geom_smooth(
aes(x = .data[[cohort_x]], y = .data[[cohort_y]]),
method = "gam",
linewidth = 0.5
) +
labs(x = paste0(method_x),
y = paste0(method_y)) +
theme_bw() +
theme(axis.title = element_text(colour = "black",
size = 18),
axis.text = element_text(colour = "black",
size = 14),
legend.position = "none")
}
# Get Correlation legend ----
get_cor_legend <- function(df, x, y, variance_df) {
require(tidyverse)
require(ggplot2)
cohort_x <- colnames(df)[x]
cohort_y <- colnames(df)[y]
method_x <- colnames(df)[x] %>% str_remove("_SRR.*")
method_y <- colnames(df)[y] %>% str_remove("_SRR.*")
sample_id <- colnames(df)[x] %>% str_remove(".*_")
concordant <- head(dplyr::arrange(variance_df,
rowvar)[["transcript_id"]], 100)
discordant <- head(dplyr::arrange(variance_df,
desc(rowvar))[["transcript_id"]], 100)
cor_to_plot <- df %>%
#dplyr::arrange(colour_txps) %>%
dplyr::mutate(colour_txps = case_when(
transcript_id %in% concordant ~ "Concordant",
transcript_id %in% discordant ~ "Discordant",
.default = "midcor"
),
colour = factor(colour_txps, levels = c("midcor",
"Concordant",
"Discordant")
))
cor_legend <- cowplot::get_legend(
cor_to_plot %>%
dplyr::filter(colour_txps %in% c("Concordant", "Discordant")) %>%
ggplot() +
geom_point(
aes(x = .data[[cohort_x]],
y = .data[[cohort_y]],
colour = .data[["colour_txps"]]),
alpha = 1,
size = 8
) +
scale_colour_manual(
values = c("green", "red")
) +
guides(colour = guide_legend(bycol = TRUE)) +
labs(colour = "Variance") +
theme_bw() +
theme(legend.title = element_blank(),
legend.text = element_text(size = 20, colour = "black"),
legend.spacing.x = unit(1, "cm"),
legend.position = "bottom")
)
return(cor_legend)
}
# Plot the correlation values ----
plot_cor_value <- function(r_sq) {
require(tidyverse)
require(ggplot2)
require(magrittr)
require(edgeR)
ggplot() +
annotate("text",
x = 1,
y = 1,
size = 20,
label = round(r_sq, 3)) +
scale_x_discrete(position = "top") +
scale_y_discrete(position = "right") +
theme_classic() +
theme(panel.border = element_rect(colour = "black",
size = 1,
fill = NA),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "cm"),
axis.text = element_blank(),
axis.ticks = element_blank())
}
# Plot the entire correlation cowplot ----
plot_cor_cowplot_var <- function(joined_df, variance_df) {
require(tidyverse)
require(ggplot2)
require(grid)
require(magrittr)
require(cowplot)
require(edgeR)
# Now plot all and then create cowplot
a_b <- plot_sample_cor(df = joined_df, x = 2, y = 3,
variance_df = variance_df) +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank())
a_b_cor <- cor(joined_df[[2]],
joined_df[[3]]) %>%
plot_cor_value() +
labs(x = "Kallisto", y = "") +
theme(axis.title = element_text(colour = "black",
size = 18))
a_c <- plot_sample_cor(df = joined_df, x = 2, y = 4,
variance_df = variance_df) +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank())
a_c_cor <- cor(joined_df[[2]],
joined_df[[4]]) %>%
plot_cor_value() +
labs(x = "STAR", y = "") +
theme(axis.title = element_text(colour = "black",
size = 18))
a_d <- plot_sample_cor(df = joined_df, x = 2, y = 5,
variance_df = variance_df)
a_d_cor <- cor(joined_df[[2]],
joined_df[[5]]) %>%
plot_cor_value() +
labs(x = "Salmon", y = "HISAT2") +
theme(axis.title = element_text(colour = "black",
size = 18))
b_c <- plot_sample_cor(df = joined_df, x = 3, y = 4,
variance_df = variance_df) +
theme(axis.title = element_blank(),
axis.text = element_blank())
b_c_cor <- cor(joined_df[[3]],
joined_df[[4]]) %>%
plot_cor_value() +
labs(x = "", y = "")
b_d <- plot_sample_cor(df = joined_df, x = 3, y = 5,
variance_df = variance_df) +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank())
b_d_cor <- cor(joined_df[[3]],
joined_df[[5]]) %>%
plot_cor_value() +
labs(x = "", y = "Kallisto") +
theme(axis.title = element_text(colour = "black",
size = 18))
c_d <- plot_sample_cor(df = joined_df, x = 4, y = 5,
variance_df = variance_df) +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank())
c_d_cor <- cor(joined_df[[4]],
joined_df[[5]]) %>%
plot_cor_value() +
labs(x = "", y = "STAR") +
theme(axis.title = element_text(colour = "black",
size = 18))
blanc <- ggplot() +
geom_blank() +
theme_void() +
theme(plot.background = element_rect(fill = "white", colour = "white"))
cor_cowplot <- cowplot::plot_grid(blanc, a_b_cor, a_c_cor, a_d_cor,
a_b, blanc, b_c_cor, b_d_cor,
a_c, b_c, blanc, c_d_cor,
a_d, b_d, c_d, blanc,
ncol = 4,
nrow = 4,
rel_heights = c(1,1,1,1),
rel_widths = c(1,1,1,1))
xlab <- grid::textGrob("Transcript Expression (log2 CPM)",
gp = gpar(fontface = "bold",
col = "black",
fontsize = 26))
fig_cor <- cowplot::plot_grid(cor_cowplot, xlab,
ncol = 1, rel_heights = c(1, 0.05))
ylab <- grid::textGrob("Transcript Expression (log2 CPM)",
gp = gpar(fontface = "bold",
col = "black",
fontsize = 26),
rot = 90)
cor_legend <- get_cor_legend(df = joined_df, x = 2, y = 3,
variance_df = variance_df)
fig_cor_labs <- cowplot::plot_grid(ylab, fig_cor,
blanc, cor_legend,
ncol = 2,
nrow = 2,
rel_heights = c(1, 0.05),
rel_widths = c(0.05, 1))
return(fig_cor_labs)
}
plot_cor_cowplot_loadings <- function(joined_df, colour_txps = NA) {
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
# Chunk 2
library(rmdformats)
library(dplyr)
library(tidyr)
library(readr)
library(stringr)
library(magrittr)
library(ggplot2)
library(edgeR)
library(cowplot)
library(ggbeeswarm)
library(tibble)
library(here)
# Chunk 3
source(here("R/cor_funcs_variance.R"))
source(here("R/theme_justin.R"))
# Chunk 4
gene_txp_anno <- read_csv(here("data/grch38_103_df.csv.gz"))
txp_gene_ensdb_lengths <- read_csv(
here("data/txp_gene_ensdb_lengths.csv.gz")
)
transcript_key <- dplyr::select(txp_gene_ensdb_lengths,
c("transcript_id" = tx_id,
"transcript_name" = tx_name))
# Chunk 5
hisat2_dtelist <- read_rds(here("data/hisat2_dtelist.rds"))
kallisto_dtelist <- read_rds(here("data/kallisto_dtelist.rds"))
salmon_dtelist <- read_rds(here("data/sa_dtelist.rds"))
star_dtelist <- read_rds(here("data/star_dtelist.rds"))
hisat2_loadings <- read_csv(here("data/hisat2_loadings.csv"))
kallisto_loadings <- read_csv(here("data/kallisto_loadings.csv"))
salmon_loadings <- read_csv(here("data/salmon_loadings.csv"))
star_loadings <- read_csv(here("data/star_loadings.csv"))
# Chunk 6
df_for_var <- function(dge) {
df <- dge %>%
cpm(log = TRUE) %>%
as.data.frame() %>%
rownames_to_column("transcript_id") %>%
as_tibble()
return(df)
}
hs2_df <- df_for_var(hisat2_dtelist)
kal_df <- df_for_var(kallisto_dtelist)
sal_df <- df_for_var(salmon_dtelist)
star_df <- df_for_var(star_dtelist)
df <- hs2_df %>%
inner_join(kal_df, by = "transcript_id") %>%
inner_join(sal_df, by = "transcript_id") %>%
inner_join(star_df, by = "transcript_id")
df$rowvar <- apply(df[,-1], 1, var)
most_variant <- df %>%
dplyr::arrange(desc(rowvar)) %>%
dplyr::select(transcript_id, rowvar)
most_variant %>%
write_csv(here("data/variance_df.csv"))
least_variant <- df %>%
dplyr::arrange(rowvar) %>%
dplyr::select(transcript_id, rowvar)
top_variant <- most_variant %>% head(200)
bottom_variant <- least_variant %>% head(200)
# Chunk 7
joined_df <- get_joined_samples(w = hisat2_dtelist,
x = kallisto_dtelist,
y = star_dtelist,
z = salmon_dtelist,
method_w = "HISAT2",
method_x = "Kallisto",
method_y = "STAR",
method_z = "Salmon",
sample = 1)
# Chunk 8
difference <- function(x, y) {z <- x-y; return(z)}
joined_df %>%
left_join(txp_gene_ensdb_lengths %>%
dplyr::select(tx_id, gc_content),
by = c("transcript_id" = "tx_id")) %>%
dplyr::arrange(gc_content) %>%
dplyr::select(transcript_id, Kallisto_SRR13401116,
Salmon_SRR13401116, gc_content) %>%
dplyr::mutate(diff = difference(Kallisto_SRR13401116,
Salmon_SRR13401116)) %>%
ggplot(aes(x = gc_content, y = diff)) +
geom_point()
isoform_df <- txp_gene_ensdb_lengths$gene_id %>%
table() %>%
as.data.frame() %>%
set_colnames(c("gene_id", "isoforms"))
joined_df %>%
left_join(txp_gene_ensdb_lengths %>%
dplyr::select(tx_id, gene_id),
by = c("transcript_id" = "tx_id")) %>%
left_join(isoform_df,
by = "gene_id") %>%
dplyr::arrange(desc(isoforms)) %>%
dplyr::select(transcript_id, Salmon_SRR13401116,
STAR_SRR13401116, isoforms) %>%
dplyr::mutate(diff = difference(Salmon_SRR13401116,
STAR_SRR13401116)) %>%
mutate(direction = case_when(diff > 0 ~ "up_salmon",
diff < 0 ~ "up_star",
diff == 0 ~ "equal"),
isoform_group = case_when(isoforms >= 16 ~ "Very High",
isoforms >= 10 ~ "High",
isoforms >= 6  ~ "Medium",
isoforms < 6 ~ "Low")) %>%
ggplot(aes(x = direction, y = log2(abs(diff)), colour = isoform_group)) +
geom_quasirandom() +
theme_bw()
isoform_df <- joined_df %>%
left_join(txp_gene_ensdb_lengths %>%
dplyr::select(tx_id, gene_id),
by = c("transcript_id" = "tx_id")) %>%
left_join(isoform_df,
by = "gene_id") %>%
dplyr::arrange(desc(isoforms)) %>%
dplyr::select(transcript_id, Salmon_SRR13401116,
STAR_SRR13401116, isoforms) %>%
dplyr::mutate(diff = difference(Salmon_SRR13401116,
STAR_SRR13401116)) %>%
mutate(direction = case_when(diff > 0 ~ "up_salmon",
diff < 0 ~ "up_star",
diff == 0 ~ "equal"),
isoform_group = case_when(isoforms >= 16 ~ "Very High",
isoforms >= 10 ~ "High",
isoforms >= 6  ~ "Medium",
isoforms < 6 ~ "Low"))
isoform_df$direction %>% table()
# up_star up_salmon
# 22056      3527
# Probably can conclude that STAR doesn't do much for isoforms
joined_df %>%
inner_join(txp_gene_ensdb_lengths %>%
dplyr::select(tx_id, gene_id),
by = c("transcript_id" = "tx_id")) %>%
inner_join(isoform_df,
by = c("transcript_id",
"Salmon_SRR13401116",
"STAR_SRR13401116")) %>%
dplyr::arrange(desc(isoforms)) %>%
dplyr::select(transcript_id, Salmon_SRR13401116,
STAR_SRR13401116, isoforms) %>%
dplyr::mutate(diff = difference(Salmon_SRR13401116,
STAR_SRR13401116)) %>%
mutate(direction = case_when(diff > 0 ~ "up_salmon",
diff < 0 ~ "up_star",
diff == 0 ~ "equal"),
isoform_group = case_when(isoforms >= 16 ~ "Very High",
isoforms >= 10 ~ "High",
isoforms >= 6  ~ "Medium",
isoforms < 6 ~ "Low")) %>%
ggplot(aes(x = Salmon_SRR13401116,
y = STAR_SRR13401116,
colour = isoform_group)) +
geom_point() +
scale_color_viridis_d() +
theme_bw()
joined_df %>%
inner_join(txp_gene_ensdb_lengths %>%
dplyr::select(tx_id, gene_id),
by = c("transcript_id" = "tx_id")) %>%
inner_join(isoform_df,
by = c("transcript_id",
"Salmon_SRR13401116",
"STAR_SRR13401116")) %>%
dplyr::arrange(desc(isoforms)) %>%
dplyr::select(transcript_id, Salmon_SRR13401116,
STAR_SRR13401116, isoforms) %>%
dplyr::mutate(diff = difference(Salmon_SRR13401116,
STAR_SRR13401116)) %>%
pivot_longer(cols = c("Salmon_SRR13401116",
"STAR_SRR13401116"),
names_to = "method",
values_to = "counts") %>%
ggplot(aes(x = log2(diff), y = isoforms)) +
geom_point() +
theme_bw()
# Chunk 9: get_noncor
noncor_gtf <- joined_df %>%
dplyr::filter(HISAT2_SRR13401116 > 6,
Kallisto_SRR13401116 < 3,
Salmon_SRR13401116 < 3,
STAR_SRR13401116 < 3) %>%
dplyr::select(transcript_id) %>%
left_join(txp_gene_ensdb_lengths,
by = c("transcript_id" = "tx_id"))
noncor_gtf %>%
write_csv(here("data/noncor_gtf.csv"))
noncor_ensdb <- joined_df %>%
dplyr::filter(HISAT2_SRR13401116 > 6,
Kallisto_SRR13401116 < 3,
Salmon_SRR13401116 < 3,
STAR_SRR13401116 < 3) %>%
dplyr::select(transcript_id) %>%
left_join(gene_txp_anno,
by = "transcript_id")
noncor_ensdb <- noncor_ensdb %>%
dplyr::select(-score,
-phase) %>%
select_if(~ !all(is.na(.))) %>%
dplyr::select(-ccds_id,
-transcript_support_level,
-tag) %>%
drop_na()
noncor_ensdb %>%
write_csv(here("data/noncor_ensbd.csv"))
# Chunk 10
fig_cor_labs <- plot_cor_cowplot_var(joined_df = joined_df,
variance_df = most_variant)
ggsave(plot = fig_cor_labs,
filename = "figure3_cor_concord_discord.png",
path = here("figures/"),
units = "cm",
height = 42,
width = 42)
hisat2_cor_cowplot <- plot_cor_cowplot_loadings(
joined_df = joined_df,
colour_txps = head(hisat2_loadings$transcript_id, 100)
)
ggsave(plot = hisat2_cor_cowplot,
filename = "cor_HISAT2_SRR13401116.png",
path = here("figures/"),
units = "cm",
height = 42,
width = 42)
kallisto_cor_cowplot <- plot_cor_cowplot_loadings(
joined_df = joined_df,
colour_txps = head(kallisto_loadings$transcript_id, 100)
)
ggsave(plot = kallisto_cor_cowplot,
filename = "cor_kallisto_SRR13401116.png",
path = here("figures/"),
units = "cm",
height = 42,
width = 42)
star_cor_cowplot <- plot_cor_cowplot_loadings(
joined_df = joined_df,
colour_txps = head(star_loadings$transcript_id, 100)
)
ggsave(plot = star_cor_cowplot,
filename = "cor_STAR_SRR13401116.png",
path = here("figures/"),
units = "cm",
height = 42,
width = 42)
salmon_cor_cowplot <- plot_cor_cowplot_loadings(
joined_df = joined_df,
colour_txps = head(salmon_loadings$transcript_id, 100)
)
ggsave(plot = salmon_cor_cowplot,
filename = "cor_salmon_SRR13401116.png",
path = here("figures/"),
units = "cm",
height = 42,
width = 42)
# Chunk 11: noncor_isoforms
noncor_isoform_freq <- gene_txp_anno %>%
dplyr::filter(gene_id %in% noncor_ensdb$gene_id,
type == "transcript") %>%
dplyr::select(gene_name) %>%
table() %>%
table() %>%
as.data.frame() %>%
set_colnames(c("Isoforms", "Frequency")) %>%
as_tibble() %>%
ggplot() +
geom_col(aes(x = Isoforms, y = Frequency),
fill = "blue", alpha = 0.8) +
scale_y_continuous(limits = c(0 ,9), breaks = c(1,2,3,4,5,6,7,8,9)) +
theme_justin() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank())
ggsave(plot = noncor_isoform_freq,
filename = "noncor_isoform_freq.png",
path = here("figures/"),
units = "cm",
height = 20,
width = 32)
gene_txp_anno %>%
dplyr::filter(transcript_id %in% noncor_ensdb$transcript_id,
type == "transcript") %>%
dplyr::select(gene_name) %>%
table() %>%
table()
